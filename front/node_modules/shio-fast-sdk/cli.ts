import dotenv from 'dotenv';
dotenv.config()

import { EstimateFee, ExecuteTransactionBlock, AppendCoinToTip, ShioFastRpcUrl } from "./src";
import { SuiClient } from '@mysten/sui/client';
import { Transaction, SerialTransactionExecutor } from '@mysten/sui/transactions';
import { Ed25519Keypair } from '@mysten/sui/keypairs/ed25519';

async function main() {
  const client = new SuiClient({ url: ShioFastRpcUrl });
  const keypair = Ed25519Keypair.fromSecretKey(process.env.SUI_PRIVATE_KEY as string);
  const address = keypair.getPublicKey().toSuiAddress();
  const tx = new Transaction();
  tx.moveCall({
    package: "0x2",
    module: "clock",
    function: "timestamp_ms",
    typeArguments: [],
    arguments: [tx.object("0x6")],
  });
  tx.setSender(address);

  let estimatedFee = await EstimateFee({
    transaction: tx,
    client: client,
  });
  console.log(estimatedFee);
  
  tx.setGasBudget(estimatedFee.gasBudget);
  let tipCoins = tx.splitCoins(tx.gas, [estimatedFee.tipAmount]);
  AppendCoinToTip(tx, tipCoins[0], estimatedFee.tipAmount);

  let builtTx = await tx.build({
    client: client,
  });
  let signed = await keypair.signTransaction(builtTx);
  let result = await ExecuteTransactionBlock(client, signed, {
    showEffects: true,
  });
  console.log(result);
}

main();
