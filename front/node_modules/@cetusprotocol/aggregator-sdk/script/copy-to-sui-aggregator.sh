#!/bin/bash

# 复制 aggregator-sdk 文件到 sui/aggregator 目录的脚本
# 作者: Auto Generated Script
# 日期: $(date)

set -e  # 遇到错误时退出

# 定义源目录和目标目录
SOURCE_DIR="/home/ccbond/github/cetus/aggregator-sdk"
TARGET_DIR="/home/ccbond/github/sui/aggregator"

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 打印带颜色的消息
print_message() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# 检查源目录是否存在
if [ ! -d "$SOURCE_DIR" ]; then
    print_message $RED "错误: 源目录 $SOURCE_DIR 不存在!"
    exit 1
fi

# 创建目标目录（如果不存在）
if [ ! -d "$TARGET_DIR" ]; then
    print_message $YELLOW "目标目录 $TARGET_DIR 不存在，正在创建..."
    mkdir -p "$TARGET_DIR"
fi

print_message $GREEN "开始复制文件..."
print_message $YELLOW "源目录: $SOURCE_DIR"
print_message $YELLOW "目标目录: $TARGET_DIR"
echo

# 复制 src 目录
if [ -d "$SOURCE_DIR/src" ]; then
    print_message $GREEN "复制 src 目录..."
    cp -r "$SOURCE_DIR/src" "$TARGET_DIR/"
else
    print_message $RED "警告: src 目录不存在于源路径中"
fi

# 复制 package.json
if [ -f "$SOURCE_DIR/package.json" ]; then
    print_message $GREEN "复制 package.json..."
    cp "$SOURCE_DIR/package.json" "$TARGET_DIR/"
else
    print_message $RED "警告: package.json 不存在于源路径中"
fi

# 复制 README.md (假设是 README.md)
if [ -f "$SOURCE_DIR/README.md" ]; then
    print_message $GREEN "复制 README.md..."
    cp "$SOURCE_DIR/README.md" "$TARGET_DIR/"
elif [ -f "$SOURCE_DIR/README" ]; then
    print_message $GREEN "复制 README..."
    cp "$SOURCE_DIR/README" "$TARGET_DIR/"
else
    print_message $RED "警告: README 或 README.md 不存在于源路径中"
fi

# 复制 tests 目录
if [ -d "$SOURCE_DIR/tests" ]; then
    print_message $GREEN "复制 tests 目录..."
    cp -r "$SOURCE_DIR/tests" "$TARGET_DIR/"
else
    print_message $RED "警告: tests 目录不存在于源路径中"
fi

echo
print_message $GREEN "复制完成!"
print_message $YELLOW "复制的文件和目录位于: $TARGET_DIR"

# 显示目标目录内容
echo
print_message $YELLOW "目标目录内容:"
ls -la "$TARGET_DIR" 
