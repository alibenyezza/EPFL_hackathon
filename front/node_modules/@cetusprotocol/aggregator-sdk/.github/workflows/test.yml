name: Automated Testing with Success Rate

on:
  push:
    branches: [ main, develop, refactor-v3 ]
  pull_request:
    branches: [ main, develop, refactor-v3 ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Run tests with coverage and statistics
      run: |
        echo "🧪 Running all tests..."
        
        # Run tests with JSON output for parsing
        bun test --json --outputFile=test-results.json --coverage || true
        
        # Also run regular test output for display
        echo "📊 Test Results:"
        bun test --verbose || TEST_EXIT_CODE=$?
        
        # Parse test results and calculate success rate
        echo "📈 Calculating test success rate..."
        
        # Create a simple Node.js script to parse JSON results
        cat > calculate-stats.js << 'EOF'
        const fs = require('fs');
        
        try {
          // Try to read the JSON results file
          let results;
          if (fs.existsSync('test-results.json')) {
            const data = fs.readFileSync('test-results.json', 'utf8');
            results = JSON.parse(data);
          } else {
            console.log('⚠️  JSON results file not found, using alternative method');
            process.exit(1);
          }
          
          // Calculate statistics
          const totalTests = results.numTotalTests || 0;
          const passedTests = results.numPassedTests || 0;
          const failedTests = results.numFailedTests || 0;
          const successRate = totalTests > 0 ? ((passedTests / totalTests) * 100).toFixed(2) : 0;
          
          console.log('\n📊 =================================');
          console.log('📊 TEST EXECUTION SUMMARY');
          console.log('📊 =================================');
          console.log(`📊 Total Tests: ${totalTests}`);
          console.log(`✅ Passed Tests: ${passedTests}`);
          console.log(`❌ Failed Tests: ${failedTests}`);
          console.log(`📈 Success Rate: ${successRate}%`);
          console.log('📊 =================================\n');
          
          // Set environment variables for GitHub Actions
          console.log(`::set-output name=total_tests::${totalTests}`);
          console.log(`::set-output name=passed_tests::${passedTests}`);
          console.log(`::set-output name=failed_tests::${failedTests}`);
          console.log(`::set-output name=success_rate::${successRate}`);
          
          // Exit with non-zero code if tests failed
          if (failedTests > 0) {
            process.exit(1);
          }
          
        } catch (error) {
          console.error('Error parsing test results:', error);
          process.exit(1);
        }
        EOF
        
        # Run the statistics calculation
        node calculate-stats.js || {
          echo "⚠️  Falling back to alternative statistics calculation..."
          
          # Alternative method using grep on test output
          echo "📊 ================================="
          echo "📊 TEST EXECUTION SUMMARY"
          echo "📊 ================================="
          
          # Count test files
          TEST_FILES=$(find tests -name "*.test.ts" | wc -l)
          echo "📊 Total Test Files: $TEST_FILES"
          
          # Try to get basic stats from bun test output
          echo "📊 Running tests again for statistics..."
          bun test 2>&1 | tee test-output.log
          
          # Parse the output for basic statistics
          if grep -q "Tests:" test-output.log; then
            STATS=$(grep "Tests:" test-output.log | tail -1)
            echo "📊 $STATS"
          fi
          
          echo "📊 ================================="
          
          # Clean up
          rm -f test-output.log
        }
        
        # Clean up
        rm -f calculate-stats.js test-results.json
        
        # Exit with the original test exit code
        exit ${TEST_EXIT_CODE:-0}
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results.json
        retention-days: 30
        
    - name: Comment PR with test results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `## 🧪 Test Results
          
          **Test Execution Summary:**
          - Total Tests: \${{ steps.test.outputs.total_tests || 'N/A' }}
          - Passed Tests: \${{ steps.test.outputs.passed_tests || 'N/A' }}
          - Failed Tests: \${{ steps.test.outputs.failed_tests || 'N/A' }}
          - Success Rate: \${{ steps.test.outputs.success_rate || 'N/A' }}%
          
          \${{ steps.test.outputs.failed_tests > 0 && '❌ Some tests failed. Please review the test output above.' || '✅ All tests passed!' }}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });