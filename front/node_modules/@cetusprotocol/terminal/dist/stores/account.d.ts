import { TokenBalance } from '../types';
import { WalletAccount } from '@wallet-standard/base';
interface AccountState {
    accounts: WalletAccount[];
    currentAccount: WalletAccount | undefined;
    saveCurrentAccount: (account: WalletAccount | undefined) => void;
    saveAccounts: (accounts: WalletAccount[]) => void;
    isOpenWalletModal: boolean;
    onWalletModal: (isOpen: boolean) => void;
    isOpenAccountList: boolean;
    setIsOpenAccountList: (value: boolean) => void;
    tokenBalanceObj: Record<string, TokenBalance>;
    setTokenBalanceObj: (data: Record<string, TokenBalance>) => void;
    accountServiceNameObj: any;
    setAccountServiceNameObj: (value: any) => void;
}
declare const useAccountStore: import('zustand').UseBoundStore<import('zustand').StoreApi<AccountState>>;
export { useAccountStore };
