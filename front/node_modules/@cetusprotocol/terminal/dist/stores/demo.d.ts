import { DefaultPairType, DefaultSlippageType, DisplayMode, ThemeType, WidgetBtnSize, WidgetDirection, WidgetTheme } from '../types';
interface DemoState {
    defaultPairType: DefaultPairType;
    setDefaultPairType: (value: DefaultPairType) => void;
    defaultSlippageType: DefaultSlippageType;
    setDefaultSlippageType: (value: DefaultSlippageType) => void;
    isIndependentWallet: boolean;
    customSlippage: string;
    setCustomSlippage: (value: string) => void;
    setIsIndependentWallet: (value: boolean) => void;
    customRpcList: any[];
    setCustomRpcList: (value: any) => void;
    defaultRpcIndex: number;
    setDefaultRpcIndex: (value: number) => void;
    displayMode: DisplayMode;
    setDisplayMode: (value: DisplayMode) => void;
    isOpenSwapModal: boolean;
    setIsOpenSwapModal: (value: boolean) => void;
    widgetCurrentDirection: WidgetDirection;
    setWidgetCurrentDirection: (value: WidgetDirection) => void;
    widgetBtnSize: WidgetBtnSize;
    setWidgetBtnSize: (value: WidgetBtnSize) => void;
    isOpenSwapWidgetModal: boolean;
    setIsOpenSwapWidgetModal: (value: boolean) => void;
    currentTheme: ThemeType;
    setCurrentTheme: (value: ThemeType) => void;
    customColor: WidgetTheme;
    setCustomColor: (value: WidgetTheme) => void;
    logoUrl: string;
    setLogoUrl: (value: string) => void;
}
declare const useDemoStore: import('zustand').UseBoundStore<import('zustand').StoreApi<DemoState>>;
export default useDemoStore;
