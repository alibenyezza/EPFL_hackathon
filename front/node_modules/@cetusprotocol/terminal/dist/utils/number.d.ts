import { default as BN } from 'bn.js';
import { Decimal } from './decimal';
export declare const d: (value?: Decimal.Value | undefined) => Decimal.Instance;
export declare function amountToBN(amount: string, decimals: number | undefined): BN;
export declare function bnToAmount(amount: any, decimals: number | undefined): string;
export declare const fixNumber: (value: string | number, decimal: number, rounding: Decimal.Rounding) => string;
export declare const fixDown: (value: string | number, decimal: number) => string;
export declare const addComma: (value: string) => string;
export declare function getGtZeroIndex(value: string): number;
export declare function toDecimalsAmount(amount: number | string, decimals: number | string): number;
export declare function fromDecimalsAmount(amount: number | string, decimals: number | string): number;
export declare function decimalsMultiplier(decimals?: Decimal.Value): Decimal.Instance;
export declare function fromDecimalsAmountFix(amount: number | string, decimals: number | string): string;
/**
 * 将科学计数法表示的数字字符串转换为普通小数形式
 * @param numStr - 要转换的数字字符串
 * @param precision - 精度（保留的小数位数）
 * @returns 普通小数形式的字符串
 */
export declare function convertScientificToDecimal(numStr?: string, precision?: number): string;
